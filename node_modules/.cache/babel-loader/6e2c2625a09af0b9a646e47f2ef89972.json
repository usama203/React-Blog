{"ast":null,"code":"const INCREMENT = \"increment\";\nconst ADD_ITEM = \"addItem\"; // Action\n// export const incrementCount = () => ({\n//   type: INCREMENT,\n// });\n\nexport const addItem = itemData => ({\n  type: ADD_ITEM,\n  itemId\n}); // Initial State\n\nconst initialState = {\n  count: 0,\n  items: []\n}; // Reducers\n\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_ITEM:\n      return { ...state,\n        items: state.items.filter(item => item.id += action.itemId) // count: state.count + 1,\n\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["D:/Reactjs/New folder/blogging/src/redux/reducers/counter.js"],"names":["INCREMENT","ADD_ITEM","addItem","itemData","type","itemId","initialState","count","items","state","action","filter","item","id"],"mappings":"AAAA,MAAMA,SAAS,GAAG,WAAlB;AACA,MAAMC,QAAQ,GAAG,SAAjB,C,CAGA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,OAAO,GAAIC,QAAD,KAAe;AAClCC,EAAAA,IAAI,EAAEH,QAD4B;AAEjCI,EAAAA;AAFiC,CAAf,CAAhB,C,CAKP;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,CADY;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAArB,C,CAKA;;AACA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAC/C,UAAQA,MAAM,CAACN,IAAf;AACE,SAAKH,QAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELD,QAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,CAAYG,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACC,EAAL,IAAWH,MAAM,CAACL,MAA/C,CAFF,CAGL;;AAHK,OAAP;;AAMF;AACE,aAAOI,KAAP;AATJ;AAWD,CAZD","sourcesContent":["const INCREMENT = \"increment\";\r\nconst ADD_ITEM = \"addItem\";\r\n\r\n\r\n// Action\r\n// export const incrementCount = () => ({\r\n//   type: INCREMENT,\r\n// });\r\n\r\nexport const addItem = (itemData) => ({\r\n    type: ADD_ITEM,\r\n     itemId,\r\n  });\r\n\r\n// Initial State\r\nconst initialState = {\r\n  count: 0,\r\n  items: [],\r\n};\r\n\r\n// Reducers\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_ITEM:\r\n      return {\r\n        ...state,\r\n        items: state.items.filter((item) => item.id += action.itemId),\r\n        // count: state.count + 1,\r\n      };\r\n   \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}